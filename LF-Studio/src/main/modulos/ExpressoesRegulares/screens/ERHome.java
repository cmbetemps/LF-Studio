package main.modulos.ExpressoesRegulares.screens;

import com.google.gson.Gson;
import java.awt.Font;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import main.LFStudio;
import main.modulos.ExpressoesRegulares.domain.models.ER;

/**
 *
 * @author Grupo-03
 */
public class ERHome extends javax.swing.JPanel {

    javax.swing.JPanel JanelaExecucao;

    /**
     * Creates new form ERHome
     * @param janela
     */
    public ERHome(javax.swing.JPanel janela) {
        this.JanelaExecucao = janela;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fndTitle = new javax.swing.JPanel();
        labelTituloER = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelNovaER = new javax.swing.JLabel();
        labelImportarER = new javax.swing.JLabel();

        setBackground(new java.awt.Color(28, 28, 28));

        fndTitle.setBackground(new java.awt.Color(28, 28, 28));
        fndTitle.setPreferredSize(new java.awt.Dimension(579, 648));

        labelTituloER.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 48)); // NOI18N
        labelTituloER.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloER.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTituloER.setText("<html><p style=\"padding-bottom: 16px; font-size:30px;\">Expressão Regular</p></html>");
        labelTituloER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelTituloERMouseEntered(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(28, 28, 28));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        labelNovaER.setBackground(new java.awt.Color(0, 0, 0));
        labelNovaER.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 28)); // NOI18N
        labelNovaER.setForeground(new java.awt.Color(255, 255, 255));
        labelNovaER.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNovaER.setText("Nova ER");
        labelNovaER.setAlignmentX(5.0F);
        labelNovaER.setAlignmentY(5.0F);
        labelNovaER.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelNovaER.setPreferredSize(new java.awt.Dimension(150, 22));
        labelNovaER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelNovaERMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelNovaERMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelNovaERMouseExited(evt);
            }
        });

        labelImportarER.setBackground(new java.awt.Color(0, 0, 0));
        labelImportarER.setFont(new java.awt.Font("Microsoft Yi Baiti", 1, 28)); // NOI18N
        labelImportarER.setForeground(new java.awt.Color(255, 255, 255));
        labelImportarER.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelImportarER.setText("Importar ER");
        labelImportarER.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelImportarER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelImportarERMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelImportarERMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelImportarERMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fndTitleLayout = new javax.swing.GroupLayout(fndTitle);
        fndTitle.setLayout(fndTitleLayout);
        fndTitleLayout.setHorizontalGroup(
            fndTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelTituloER)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fndTitleLayout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addComponent(labelNovaER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(labelImportarER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        fndTitleLayout.setVerticalGroup(
            fndTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fndTitleLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(labelTituloER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(labelNovaER, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelImportarER)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fndTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fndTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void labelNovaERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelNovaERMouseClicked
        LFStudio.cl.show(JanelaExecucao, "erForm");
    }//GEN-LAST:event_labelNovaERMouseClicked

    private void labelNovaERMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelNovaERMouseEntered
        Font f = labelNovaER.getFont();
        labelNovaER.setFont(f.deriveFont(f.getStyle(), f.getSize2D()+4));
    }//GEN-LAST:event_labelNovaERMouseEntered

    private void labelNovaERMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelNovaERMouseExited
        Font f = labelNovaER.getFont();
        labelNovaER.setFont(f.deriveFont(f.getStyle(), f.getSize2D()-4));
    }//GEN-LAST:event_labelNovaERMouseExited

    private void labelImportarERMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImportarERMouseEntered
        Font f = labelImportarER.getFont();
        labelImportarER.setFont(f.deriveFont(f.getStyle(), f.getSize2D()+4));
    }//GEN-LAST:event_labelImportarERMouseEntered

    private void labelImportarERMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImportarERMouseExited
        Font f = labelImportarER.getFont();
        labelImportarER.setFont(f.deriveFont(f.getStyle(), f.getSize2D()-4));
    }//GEN-LAST:event_labelImportarERMouseExited

    private void labelTituloERMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelTituloERMouseEntered
    }//GEN-LAST:event_labelTituloERMouseEntered

    private void labelImportarERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImportarERMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        // fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Json File", "json"));

        fileChooser.setAcceptAllFileFilterUsed(false);

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String pathFile = fileChooser.getCurrentDirectory().toString() + "\\" + fileChooser.getSelectedFile().getName();
            File arquivoJson = new File(pathFile);
            
            if (!fileChooser.getSelectedFile().getName().endsWith(".json") || !arquivoJson.exists()) {
                JOptionPane.showMessageDialog(this,
                    "Arquivo Inválido para importar!", //mensagem
                    "Erro de Importação", // titulo da janela 
                    JOptionPane.WARNING_MESSAGE);
            } else {
                Gson json = new Gson();
                try {
                    Reader fileJson = new FileReader( arquivoJson );
                    try {
                        ER er = json.fromJson(fileJson, ER.class);
                        if (!er.getTipo().equals(ER.Tooltip.ER)) {
                            JOptionPane.showMessageDialog(this,
                                "Tipo de Linguagem Inválido!", //mensagem
                                "Erro de Importação", // titulo da janela 
                                JOptionPane.WARNING_MESSAGE);
                        } else {
                            System.out.println(er.toString());
                            LFStudio.cl.show(JanelaExecucao, "erForm");
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this,
                            "Tipo de Linguagem Inválido!", //mensagem
                            "Erro de Importação", // titulo da janela 
                            JOptionPane.WARNING_MESSAGE);
                    }
                    fileJson.close();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this,
                        "Erro ao abrir o arquivo!", //mensagem
                        "Erro de Importação", // titulo da janela 
                        JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("You pressed cancel");
        }
    }//GEN-LAST:event_labelImportarERMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fndTitle;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelImportarER;
    private javax.swing.JLabel labelNovaER;
    private javax.swing.JLabel labelTituloER;
    // End of variables declaration//GEN-END:variables
}
